name: Facilitator CI

on:
  push:
    branches: [master, main]
  pull_request:

env:
  PYTHON_DEFAULT_VERSION: "3.11"

jobs:
  linter:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./facilitator
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ env.PYTHON_DEFAULT_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_DEFAULT_VERSION }}
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.8.x"
          enable-cache: true
      - name: Install dependencies
        run: uv tool install nox
      - name: Run linters
        run: nox -vs lint
  test:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./facilitator
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ env.PYTHON_DEFAULT_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_DEFAULT_VERSION }}
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.8.x"
          enable-cache: true
      - name: Install dependencies
        run: uv tool install nox
      - name: Prepare environment
        run: ./setup-dev.sh
      - name: Run dockerized services
        run: docker compose up -d --wait
      - name: Run migrations
        run: cd app/src && uv run python manage.py wait_for_database --timeout 120 && uv run python manage.py migrate
      - name: Run unit tests
        run: nox -vs test
      - name: Stop dockerized services
        if: success() || failure()
        run: docker compose down -v
